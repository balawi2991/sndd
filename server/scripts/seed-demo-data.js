/**
 * Seed Demo Data Script
 * Adds sample training materials and indexes them
 */

const { Client } = require('pg');
require('dotenv').config();

const colors = {
  reset: '\x1b[0m',
  green: '\x1b[32m',
  red: '\x1b[31m',
  yellow: '\x1b[33m',
  cyan: '\x1b[36m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

const demoMaterials = [
  {
    type: 'text',
    title: 'ุฏููู ุงูุจุฏุก ุงูุณุฑูุน',
    content: `
ูุฑุญุจุงู ุจู ูู Sanad - ููุตุฉ ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงููุชูุฏูุฉ!

## ูุง ูู Sanadุ
Sanad ูู ูุธุงู ุฐูุงุก ุงุตุทูุงุนู ูุชุทูุฑ ููููู ุงูุฅุฌุงุจุฉ ุนูู ุฃุณุฆูุชู ุจูุงุกู ุนูู ุงูููุงุฏ ุงูุชุฏุฑูุจูุฉ ุงูุชู ุชุถูููุง.

## ููู ูุนููุ
1. ุฃุถู ููุงุฏ ุชุฏุฑูุจูุฉ (ูููุงุชุ ุฑูุงุจุทุ ูุตูุต)
2. ุณูุชู ููุฑุณุฉ ุงููุญุชูู ุชููุงุฆูุงู
3. ุงุทุฑุญ ุฃุณุฆูุชู ูู ุงูู Widget
4. ุณูุฌูุจ ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุจูุงุกู ุนูู ุงููุญุชูู ุงููููุฑุณ

## ุงููููุฒุงุช:
- โ ุฑุฏูุฏ ููุฑูุฉ ูุฏูููุฉ
- โ ูุตุงุฏุฑ ููุซูุฉ ููู ุฅุฌุงุจุฉ
- โ ุฏุนู ุงููุบุฉ ุงูุนุฑุจูุฉ ูุงูุฅูุฌููุฒูุฉ
- โ ูุงุฌูุฉ ุณููุฉ ุงูุงุณุชุฎุฏุงู
- โ ูุงุจู ููุชุฎุตูุต ุจุงููุงูู

## ุงูุจุฏุก:
1. ุงุฐูุจ ุฅูู ุตูุญุฉ Training Materials
2. ุฃุถู ูุญุชูู ุฎุงุต ุจู
3. ุฌุฑุจ ุงูู Widget ูู ุตูุญุฉ Try My Agent
4. ุฎุตุต ุงููุธูุฑ ูู ุตูุญุฉ Appearance
    `.trim()
  },
  {
    type: 'text',
    title: 'ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ',
    content: `
# ุงูุฃุณุฆูุฉ ุงูุดุงุฆุนุฉ (FAQ)

## ููู ุฃุถูู ููุงุฏ ุชุฏุฑูุจูุฉุ
ููููู ุฅุถุงูุฉ ููุงุฏ ุชุฏุฑูุจูุฉ ุจุซูุงุซ ุทุฑู:
1. ุฑูุน ูููุงุช (PDF, DOCX, TXT)
2. ุฅุถุงูุฉ ุฑูุงุจุท ูุตูุญุงุช ููุจ
3. ูุชุงุจุฉ ูุต ูุจุงุดุฑุฉ

## ูู ูู ุงูููุช ุชุณุชุบุฑู ุงูููุฑุณุฉุ
ุงูููุฑุณุฉ ุชุชู ุชููุงุฆูุงู ูุชุณุชุบุฑู ุนุงุฏุฉ ูู 10 ุซูุงูู ุฅูู ุฏูููุฉ ูุงุญุฏุฉ ุญุณุจ ุญุฌู ุงููุญุชูู.

## ูู ูุฏุนู ุงููุธุงู ุงููุบุฉ ุงูุนุฑุจูุฉุ
ูุนู! ุงููุธุงู ูุฏุนู ุงููุบุฉ ุงูุนุฑุจูุฉ ุจุดูู ูุงูู ูููููู ููู ูุงูุฑุฏ ุนูู ุงูุฃุณุฆูุฉ ุจุงูุนุฑุจูุฉ.

## ูู ุนุฏุฏ ุงูููุงุฏ ุงูุชู ูููููู ุฅุถุงูุชูุงุ
ููููู ุฅุถุงูุฉ ุนุฏุฏ ุบูุฑ ูุญุฏูุฏ ูู ุงูููุงุฏ ุงูุชุฏุฑูุจูุฉ.

## ูู ูููููู ุชุฎุตูุต ูุธูุฑ ุงูู Widgetุ
ูุนู! ููููู ุชุฎุตูุต:
- ุงูุฃููุงู
- ุงูุดุนุงุฑ
- ุงูุตูุฑุฉ ุงูุฑูุฒูุฉ
- ุงููุตูุต
- ุงูุฃุณุฆูุฉ ุงูููุชุฑุญุฉ

## ููู ุฃุฏูุฌ ุงูู Widget ูู ูููุนูุ
1. ุงุฐูุจ ุฅูู ุตูุญุฉ Embed
2. ุงูุณุฎ ุงูููุฏ
3. ุฃูุตูู ูุจู ูุณู </body> ูู ูููุนู
    `.trim()
  },
  {
    type: 'text',
    title: 'ุฎุทุท ุงูุฃุณุนุงุฑ',
    content: `
# ุฎุทุท ุงูุฃุณุนุงุฑ

## ุงูุฎุทุฉ ุงููุฌุงููุฉ (Free)
- โ 100 ุฑุณุงูุฉ ุดูุฑูุงู
- โ 5 ููุงุฏ ุชุฏุฑูุจูุฉ
- โ Widget ูุงุญุฏ
- โ ุฏุนู ุนุจุฑ ุงูุจุฑูุฏ ุงูุฅููุชุฑููู

ุงูุณุนุฑ: ูุฌุงูุงู

## ุฎุทุฉ ุงููุญุชุฑููู (Pro)
- โ 1,000 ุฑุณุงูุฉ ุดูุฑูุงู
- โ 50 ูุงุฏุฉ ุชุฏุฑูุจูุฉ
- โ 3 Widgets
- โ ุชุฎุตูุต ูุงูู
- โ ุฏุนู ุฐู ุฃููููุฉ
- โ ุชุญูููุงุช ูุชูุฏูุฉ

ุงูุณุนุฑ: $29/ุดูุฑูุงู

## ุฎุทุฉ ุงูุฃุนูุงู (Business)
- โ 10,000 ุฑุณุงูุฉ ุดูุฑูุงู
- โ ููุงุฏ ุชุฏุฑูุจูุฉ ุบูุฑ ูุญุฏูุฏุฉ
- โ Widgets ุบูุฑ ูุญุฏูุฏุฉ
- โ API Access
- โ ุฏุนู 24/7
- โ ูุฏูุฑ ุญุณุงุจ ูุฎุตุต
- โ ุชุฏุฑูุจ ูุฎุตุต

ุงูุณุนุฑ: $99/ุดูุฑูุงู

## ุฎุทุฉ ุงููุคุณุณุงุช (Enterprise)
- โ ุฑุณุงุฆู ุบูุฑ ูุญุฏูุฏุฉ
- โ ูู ูููุฒุงุช Business
- โ ูุดุฑ ุฎุงุต (On-premise)
- โ SLA ูุถููู
- โ ุชูุงูู ูุฎุตุต
- โ ุฏุนู ููู ูุฎุตุต

ุงูุณุนุฑ: ุชูุงุตู ูุนูุง
    `.trim()
  }
];

async function seedDemoData() {
  log('\n๐ฑ Starting Demo Data Seeding...', 'cyan');

  const dbUrl = process.env.DATABASE_URL;
  if (!dbUrl) {
    log('โ DATABASE_URL not found', 'red');
    process.exit(1);
  }

  const client = new Client({ connectionString: dbUrl });

  try {
    await client.connect();
    log('โ Connected to database', 'green');

    // Get or create demo user
    log('\n๐ค Checking demo user...', 'yellow');
    const userResult = await client.query(
      `SELECT id FROM users WHERE email = 'demo@sanad.com'`
    );

    let userId;
    if (userResult.rows.length === 0) {
      log('๐ Creating demo user...', 'yellow');
      const newUser = await client.query(`
        INSERT INTO users (id, email, name)
        VALUES ('demo-user-id', 'demo@sanad.com', 'Demo User')
        RETURNING id
      `);
      userId = newUser.rows[0].id;
      log('โ Demo user created', 'green');
    } else {
      userId = userResult.rows[0].id;
      log('โ Demo user exists', 'green');
    }

    // Add training materials
    log('\n๐ Adding training materials...', 'yellow');
    
    for (const material of demoMaterials) {
      // Check if material already exists
      const existing = await client.query(
        `SELECT id FROM training_materials WHERE user_id = $1 AND title = $2`,
        [userId, material.title]
      );

      if (existing.rows.length === 0) {
        const result = await client.query(`
          INSERT INTO training_materials (user_id, type, title, content)
          VALUES ($1, $2, $3, $4)
          RETURNING id
        `, [userId, material.type, material.title, material.content]);

        log(`   โ Added: ${material.title}`, 'green');
      } else {
        log(`   โญ๏ธ  Skipped (exists): ${material.title}`, 'yellow');
      }
    }

    // Count materials
    const count = await client.query(
      `SELECT COUNT(*) as count FROM training_materials WHERE user_id = $1`,
      [userId]
    );

    log(`\nโ Total materials: ${count.rows[0].count}`, 'green');

    await client.end();

    log('\n๐ Demo data seeded successfully!', 'green');
    log('\n๐ Next steps:', 'cyan');
    log('   1. Run indexing script to index materials');
    log('   2. Or use the API to index them');
    log('   3. Start the server: npm run dev');
    log('');

  } catch (error) {
    log(`\nโ Error: ${error.message}`, 'red');
    process.exit(1);
  }
}

seedDemoData();
